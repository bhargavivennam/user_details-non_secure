version: '3.8'

services:
#  user-details, api-gateway, naming-server, spring-cloud-config, postgres, zipkin, prometheus, grafana

  user-details-api-non-secure:
    image: bhargavivennam/user-details-non-secure-ga:latest
    ports:
      - "8083:8083"
    networks:
      - consulting_firm_network
    depends_on:
      - naming-server
      - postgres
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans

  api_gateway_service:
    image: bhargavivennam/api-gateway-ga:latest
    ports:
      - "8081:8081"
    networks:
      - consulting_firm_network
    depends_on:
      - naming-server
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans

  naming-server:
    image: bhargavivennam/naming-server-ga:latest
    ports:
      - "8761:8761"
    networks:
      - consulting_firm_network

#  spring-cloud-config-server:
#    image: bhargavivennam/spring-cloud-config-server-ga:latest
#    ports:
#      - "8888:8888"
#    networks:
#      - consulting_firm_network
#    depends_on:
#      - naming-server
#    environment:
#      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT: http://zipkin-server:9411/api/v2/spans

  postgres:
    image: postgres:16.2
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - consulting_firm_network

  zipkin-server:
    image: openzipkin/zipkin:2.23
    ports:
      - "9411:9411"
    networks:
      - consulting_firm_network
    restart: always #Restart if there is a problem starting up

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  grafana:
    image: grafana/grafana
    ports:
      - '3001:3000'
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: always

volumes:
  postgres_data:
    driver: local
  grafana_data:
    driver: local

networks:
  consulting_firm_network:
    driver: bridge